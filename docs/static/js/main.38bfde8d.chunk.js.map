{"version":3,"sources":["components/AddCategory/AddCategory.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGrid/GifGridItem.js","components/GifGrid/GifGrid.js","components/GifExpertApp/GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifts","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","imgs","GiftGridItem","className","src","alt","GifGrid","key","GifExpertApp","categories","Fragment","ReactDOM","render","document","getElementById"],"mappings":"mMA4BeA,EAzBK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACLC,mBAAS,IADJ,mBAClCC,EADkC,KACtBC,EADsB,KAczC,OACE,0BAAMC,SARa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,OAKd,2BAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAbhB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,Y,uBCYZG,EAnBD,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACA,mCACTC,EAFS,iDAEuCC,UACpDH,GAHa,6BACA,oCADA,SAKII,MAAMF,GALV,cAKTG,EALS,gBAMQA,EAAKC,OANb,uBAMPC,EANO,EAMPA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXF,IAAG,UAAEA,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZvB,kBAgBRM,GAhBQ,4CAAH,sDCqBCO,EAlBM,SAACf,GAAc,IAAD,EACPd,mBAAS,CACjCqB,KAAM,GACNS,SAAS,IAHsB,mBAC1BC,EAD0B,KACnBC,EADmB,KAejC,OATAC,qBAAU,WACRpB,EAASC,GAAUoB,MAAK,SAACC,GACvBH,EAAS,CACPX,KAAMc,EACNL,SAAS,SAGZ,CAAChB,IAEGiB,GCPMK,EATM,SAAC,GAAuB,EAArBX,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOF,EAAU,EAAVA,IACjC,OACE,yBAAKa,UAAU,0CACb,yBAAKC,IAAKd,EAAKe,IAAKb,IACpB,2BAAIA,KCkBKc,EApBC,SAAC,GAAkB,IAAhB1B,EAAe,EAAfA,SAAe,EACEe,EAAaf,GAAjCa,EADkB,EACxBN,KAAcS,EADU,EACVA,QAEtB,OACE,oCACE,wBAAIO,UAAU,qCAAqCvB,GAElDgB,GACC,uBAAGO,UAAU,oCAAb,cAGF,yBAAKA,UAAU,aACZV,EAAOJ,KAAI,SAACC,GAAD,OACV,kBAAC,EAAD,eAAciB,IAAKjB,EAAIC,IAAQD,UCU1BkB,EAvBM,WAAO,IAAD,EACW1C,mBAAS,IADpB,mBAClB2C,EADkB,KACN5C,EADM,KAQzB,OACE,kBAAC,IAAM6C,SAAP,KACE,6CACA,kBAAC,EAAD,CAAa7C,cAAeA,IAC5B,6BAEA,4BACG4C,EAAWpB,KAAI,SAACT,GAAD,OACd,kBAAC,EAAD,CAAS2B,IAAK3B,EAAUA,SAAUA,U,MCf5C+B,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.38bfde8d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({ setCategories }) => {\n  const [inputValue, setinputValue] = useState('');\n\n  const handleInputChange = (e) => {\n    setinputValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (inputValue.trim().length > 2) {\n      setCategories((cats) => [inputValue, ...cats]);\n      setinputValue('');\n    }\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\n    </form>\n  );\n};\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n};\n\nexport default AddCategory;\n","const getGifts = async (category) => {\n  const apiKey = '2gydL3BBblnsNLBmhEHm4fo3GFgCQiqj';\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n    category\n  )}&limit=10&api_key=${apiKey}`;\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n\n  const gifs = data.map((img) => {\n    return {\n      id: img.id,\n      title: img.title,\n      img: img.images?.downsized_medium.url,\n    };\n  });\n\n  return gifs;\n};\n\nexport default getGifts;\n","import { useState, useEffect } from 'react';\nimport getGifts from '../helpers/getGifs';\n\nconst useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    getGifts(category).then((imgs) => {\n      setState({\n        data: imgs,\n        loading: false,\n      });\n    });\n  }, [category]);\n\n  return state;\n};\n\nexport default useFetchGifs;\n","import React from 'react';\n\nconst GiftGridItem = ({ id, title, img }) => {\n  return (\n    <div className=\"card animate__animated animate__fadeIn\">\n      <img src={img} alt={title} />\n      <p>{title}</p>\n    </div>\n  );\n};\n\nexport default GiftGridItem;\n","import React from 'react';\nimport useFetchGifs from '../../hooks/useFetchGifs';\nimport GiftGridItem from './GifGridItem';\n\nconst GifGrid = ({ category }) => {\n  const { data: images, loading } = useFetchGifs(category);\n\n  return (\n    <>\n      <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n\n      {loading && (\n        <p className=\"animate__animated animate__flash\">Loading...</p>\n      )}\n\n      <div className=\"card-grid\">\n        {images.map((img) => (\n          <GiftGridItem key={img.id} {...img} />\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default GifGrid;\n","import React, { useState } from 'react';\nimport AddCategory from '../AddCategory/AddCategory';\nimport GifGrid from '../GifGrid/GifGrid';\n\nconst GifExpertApp = () => {\n  const [categories, setCategories] = useState([]);\n\n  // const handleAdd = () => {\n  //   // setCategories([...categories, 'GI Joe']);\n  //   setCategories((cats) => [...cats, 'GI Joe']);\n  // };\n\n  return (\n    <React.Fragment>\n      <h2>GiftExpertApp</h2>\n      <AddCategory setCategories={setCategories} />\n      <hr />\n      {/* <button onClick={handleAdd}>Agregar</button> */}\n      <ol>\n        {categories.map((category) => (\n          <GifGrid key={category} category={category} />\n        ))}\n      </ol>\n    </React.Fragment>\n  );\n};\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './components/GifExpertApp/GifExpertApp';\nimport './index.css';\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));\n"],"sourceRoot":""}